{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\reactjs-test-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport './App.css';\nimport CardsListMovie from './CardsListMovie';\nimport MoviePage from './MoviePage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getNowPlayingMovies = pageNumber => {\n      fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US&page=\".concat(pageNumber), {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          //'Content-Type': 'application/json'\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\n\n        }\n      }).then(response => response.json()).then(json => {\n        this.setState({\n          data: json,\n          totalCount: json.total_results\n        });\n        const listIDs = [];\n        json.results.map(result => {\n          listIDs.push(result.id);\n          this.setState({\n            listIds: listIDs\n          });\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      page: 1,\n      totalCount: 0,\n      listIds: null\n    };\n  }\n\n  handlePageChange(pageNumber) {\n    this.setState({\n      page: pageNumber\n    });\n    this.getNowPlayingMovies(pageNumber);\n  }\n\n  componentDidMount() {\n    this.getNowPlayingMovies(this.state.page);\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(CardsListMovie, Object.assign({}, props, {\n        pagesChange: this.getNowPlayingMovies,\n        moviesList: !!this.state.data && this.state.data,\n        pageNumber: this.state.page,\n        totalCount: this.state.totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/movie/:id\",\n      render: props => React.createElement(MoviePage, Object.assign({}, props, {\n        pagesChange: this.handlePageChange,\n        listIDs: !!this.state.listIds && this.state.listIds,\n        currPage: this.state.page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\works\\reactjs-test-app\\src\\App.js"],"names":["React","Header","BrowserRouter","Router","Route","Switch","Link","CardsListMovie","MoviePage","App","Component","constructor","props","getNowPlayingMovies","pageNumber","fetch","method","mode","headers","then","response","json","setState","data","totalCount","total_results","listIDs","results","map","result","push","id","listIds","state","page","handlePageChange","componentDidMount","render","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport './App.css';\nimport CardsListMovie from './CardsListMovie';\nimport MoviePage from './MoviePage'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n        data: null,\n        page: 1,\n        totalCount: 0,\n        listIds: null\n    }\n}\n  getNowPlayingMovies = (pageNumber) => {\n    fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US&page=${pageNumber}`, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                //'Content-Type': 'application/json'\n                \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\n            },\n        })\n        .then(response => response.json())\n        .then(json => {          \n            this.setState({\n                data: json,\n                totalCount: json.total_results,\n            })\n            const listIDs = []; \n            json.results.map(result => {\n              listIDs.push(result.id); \n              this.setState({listIds: listIDs}\n            )})\n        })\n        \n  }\n\n  handlePageChange(pageNumber) {\n    this.setState({page: pageNumber});\n    this.getNowPlayingMovies(pageNumber);\n  }\n\n  componentDidMount() {\n      this.getNowPlayingMovies(this.state.page);\n  }\n\n  render(){\n    console.log(this.state);\n    \n    return (\n      <Router>\n        <div>\n          <Header/>\n          <Route path=\"/\" exact render={(props) => <CardsListMovie {...props} pagesChange={this.getNowPlayingMovies} moviesList={!!this.state.data && this.state.data} pageNumber={this.state.page} totalCount={this.state.totalCount}/>} />\n          <Route path=\"/movie/:id\" render={(props) => <MoviePage {...props}  pagesChange={this.handlePageChange} listIDs={!!this.state.listIds && this.state.listIds} currPage={this.state.page}/>} />\n        </div>\n      </Router>\n    );\n  }\n}\n            \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}