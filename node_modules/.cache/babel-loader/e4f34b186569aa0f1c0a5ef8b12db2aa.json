{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\reactjs-test-app\\\\src\\\\MoviePage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport MoviePoster from './MoviePoster';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  itemWrapp: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  itemImg: {\n    width: 292,\n    height: 388,\n    textAlign: 'center',\n    boxShadow: '0px 0px 18px -6px rgba(0,0,0,0.75)',\n    transition: 'all ease .3s',\n    backgroundPositionX: 'center',\n    backgroundPositionY: 'center',\n    backgroundSize: '100%',\n    backgroundRepeat: 'no-repeat',\n    cursor: 'pointer',\n    '&:hover': {\n      transition: 'all ease .3s',\n      backgroundSize: '150%',\n      boxShadow: '0px 0px 18px -6px rgba(0,0,0,1)'\n    }\n  },\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n});\n\nclass MoviePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovieDetails = movieId => {\n      fetch(\"https://api.themoviedb.org/3/movie/\".concat(movieId, \"?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US\"), {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          //'Content-Type': 'application/json'\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\n\n        }\n      }).then(response => response.json()).then(json => {\n        console.log(json);\n        this.setState({\n          data: json\n        });\n      });\n    };\n\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    !!this.props.match.params.id && this.getMovieDetails(this.props.match.params.id);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + \"https://image.tmdb.org/t/p/w500/\".concat(!!this.state.data && this.state.data.backdrop_path) + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, !!this.state.data ? React.createElement(MoviePoster, {\n      poster: this.state.data.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : 'Loading...'));\n  }\n\n}\n\nexport default withStyles(styles)(MoviePage);","map":{"version":3,"sources":["C:\\works\\reactjs-test-app\\src\\MoviePage.js"],"names":["React","Component","Fragment","withStyles","Grid","BrowserRouter","Router","Route","Link","NavLink","MoviePoster","styles","theme","root","display","flexWrap","justifyContent","overflow","itemWrapp","padding","spacing","itemImg","width","height","textAlign","boxShadow","transition","backgroundPositionX","backgroundPositionY","backgroundSize","backgroundRepeat","cursor","popover","pointerEvents","paper","MoviePage","constructor","props","getMovieDetails","movieId","fetch","method","mode","headers","then","response","json","console","log","setState","data","state","componentDidMount","match","params","id","render","classes","backgroundImage","backdrop_path","poster_path"],"mappings":"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","sourcesContent":["import React, {Component,Fragment} from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport MoviePoster from './MoviePoster';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n    },\r\n    itemWrapp: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    itemImg: {\r\n        width: 292,\r\n        height: 388,\r\n        textAlign: 'center',\r\n        boxShadow: '0px 0px 18px -6px rgba(0,0,0,0.75)',\r\n        transition: 'all ease .3s',\r\n        backgroundPositionX: 'center',\r\n        backgroundPositionY: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            transition: 'all ease .3s',\r\n            backgroundSize: '150%',\r\n            boxShadow: '0px 0px 18px -6px rgba(0,0,0,1)',\r\n        }\r\n    },\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n    },\r\n});\r\n\r\nclass MoviePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n        }\r\n    }\r\n\r\n    getMovieDetails = (movieId) => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    //'Content-Type': 'application/json'\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log(json);            \r\n                this.setState({\r\n                    data: json,\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n       !!this.props.match.params.id && this.getMovieDetails(this.props.match.params.id);\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        console.log(this.state);\r\n        \r\n        return(\r\n            <div\r\n                style={{backgroundImage: \"url(\" + `https://image.tmdb.org/t/p/w500/${!!this.state.data && this.state.data.backdrop_path}` + \")\"}}\r\n            >\r\n                <Grid container>\r\n                    {\r\n                        !!this.state.data ? <MoviePoster poster={this.state.data.poster_path} /> : 'Loading...'\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MoviePage)"]},"metadata":{},"sourceType":"module"}