{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\reactjs-test-app\\\\src\\\\FavoriteButton.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  title: {\n    color: '#fff',\n    display: 'flex',\n    alignItems: 'center',\n    margin: '20px 0'\n  },\n  buttonFavorite: {\n    background: 'linear-gradient(to right, rgba(210,255,82,1) 0%, rgba(145,232,66,0.43) 100%)',\n    transition: 'all ease .5s',\n    color: \"#000\",\n    '&:hover': {\n      background: 'linear-gradient(to right, rgba(210,255,82,1) 0%, rgba(145,232,66,0.9) 100%)',\n      transition: 'all ease .5s'\n    }\n  },\n  titleText: {\n    margin: 0\n  }\n});\n\nclass FavoriteButton extends Component {\n  constructor() {\n    super();\n  }\n\n  handleAddFavorite(movieId) {\n    let arrayFav = [];\n\n    if (!this.props.favoritesList) {\n      console.log('this.props', this.props.movieId, movieId);\n      arrayFav.push({\n        id: movieId\n      });\n      localStorage.setItem('favorite', JSON.stringify(arrayFav));\n    } else {\n      arrayFav = this.props.favoritesList;\n      arrayFav.push({\n        id: movieId\n      });\n      console.log('localStorage.getItem(\"favorite\")', this.props);\n      console.log('favorit qweqwee', arrayFav);\n      localStorage.setItem('favorite', JSON.stringify(arrayFav));\n      this.props.handleChangeFavorites.bind(this);\n      this.checkFavorite(arrayFav);\n    }\n  }\n\n  checkFavorite(favoritesList) {\n    if (favoritesList) {\n      let finded = favoritesList.find(id => id.id === this.props.movieId);\n\n      if (finded) {\n        console.log('FINDED!');\n        this.forceUpdate.bind(this);\n        return React.createElement(Button, {\n          onClick: this.handleAddFavorite.bind(this, this.props.movieId),\n          className: this.props.classes.buttonFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"delete from favorite\");\n      } else {\n        console.log('NOT FIND!');\n        return React.createElement(Button, {\n          onClick: this.handleAddFavorite.bind(this, this.props.movieId),\n          className: this.props.classes.buttonFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"add to favorite\");\n      }\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return !!this.props.favoritesList ? this.checkFavorite(this.props.favoritesList) : 'loading...';\n  }\n\n}\n\nexport default withStyles(styles)(FavoriteButton);","map":{"version":3,"sources":["C:\\works\\reactjs-test-app\\src\\FavoriteButton.js"],"names":["React","Component","Fragment","withStyles","Grid","BrowserRouter","Router","Route","Link","NavLink","Button","styles","theme","title","color","display","alignItems","margin","buttonFavorite","background","transition","titleText","FavoriteButton","constructor","handleAddFavorite","movieId","arrayFav","props","favoritesList","console","log","push","id","localStorage","setItem","JSON","stringify","handleChangeFavorites","bind","checkFavorite","finded","find","forceUpdate","classes","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    title: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '20px 0'\r\n    },\r\n    buttonFavorite: {\r\n        background: 'linear-gradient(to right, rgba(210,255,82,1) 0%, rgba(145,232,66,0.43) 100%)',\r\n        transition: 'all ease .5s',\r\n        color: \"#000\",\r\n        '&:hover': {\r\n            background: 'linear-gradient(to right, rgba(210,255,82,1) 0%, rgba(145,232,66,0.9) 100%)',\r\n            transition: 'all ease .5s',\r\n        }\r\n    },\r\n    titleText: {\r\n        margin: 0\r\n    }\r\n});\r\n\r\nclass FavoriteButton extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n    };\r\n\r\n    handleAddFavorite(movieId) {\r\n        let arrayFav = []\r\n\r\n        if(!this.props.favoritesList){\r\n            console.log('this.props', this.props.movieId, movieId);\r\n            arrayFav.push({id: movieId})\r\n            localStorage.setItem('favorite', JSON.stringify(arrayFav));\r\n        } else {\r\n            arrayFav = this.props.favoritesList\r\n            arrayFav.push({id: movieId})\r\n            console.log('localStorage.getItem(\"favorite\")', this.props);\r\n            console.log('favorit qweqwee', arrayFav);            \r\n            localStorage.setItem('favorite', JSON.stringify(arrayFav));\r\n            this.props.handleChangeFavorites.bind(this)\r\n            this.checkFavorite(arrayFav)            \r\n        }\r\n        \r\n    }\r\n\r\n    checkFavorite(favoritesList){\r\n        if(favoritesList) {\r\n            let finded = favoritesList.find(id=>id.id === this.props.movieId);\r\n            if(finded) {\r\n                console.log('FINDED!');\r\n                this.forceUpdate.bind(this);\r\n                return <Button onClick={this.handleAddFavorite.bind(this, this.props.movieId)} className={this.props.classes.buttonFavorite}>delete from favorite</Button>\r\n            } else {\r\n                console.log('NOT FIND!'); \r\n                return <Button onClick={this.handleAddFavorite.bind(this, this.props.movieId)} className={this.props.classes.buttonFavorite}>add to favorite</Button>\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            !!this.props.favoritesList ? this.checkFavorite(this.props.favoritesList) : 'loading...'\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FavoriteButton)\r\n\r\n"]},"metadata":{},"sourceType":"module"}