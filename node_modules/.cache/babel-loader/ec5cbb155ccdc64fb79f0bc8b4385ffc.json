{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\reactjs-test-app\\\\src\\\\CardsListMovie.js\";\nimport React from 'react';\nimport CardMovie from './CardMovie';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass CardsListMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spacing: '5',\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    return fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US&page=1', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        //'Content-Type': 'application/json'\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\n\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      this.setState({\n        data: json\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 360,\n      className: classes.gridList,\n      cols: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, !!this.state.data ? React.createElement(CardMovie, {\n      movieInfo: this.state.data.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : 'Loading...'));\n  }\n\n}\n\nexport default withStyles(styles)(CardsListMovie);","map":{"version":3,"sources":["C:\\works\\reactjs-test-app\\src\\CardsListMovie.js"],"names":["React","CardMovie","withStyles","GridList","Grid","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","CardsListMovie","Component","constructor","props","state","spacing","data","componentDidMount","fetch","method","mode","headers","then","response","json","console","log","setState","render","classes","gridList","results"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,cAAc,EAAE,cAHd;AAIFC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC;AADe,CAAL,CAApB;;AAUA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,GADA;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,WAAOC,KAAK,CAAC,+GAAD,EAAkH;AACtHC,MAAAA,MAAM,EAAE,MAD8G;AAEtHC,MAAAA,IAAI,EAAE,MAFgH;AAGtHC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL;AACA,wBAAgB,kDAHX,CAG8D;;AAH9D;AAH6G,KAAlH,CAAL,CASFC,IATE,CASGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATf,EAUFF,IAVE,CAUGE,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,IAAI,EAAEQ;AADI,OAAd;AAGH,KAfE,CAAP;AAgBH;;AAEDI,EAAAA,MAAM,GAAE;AAAA,UACIC,OADJ,GACgB,KAAKhB,KADrB,CACIgB,OADJ;AAEJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AAEA,WACI;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAAC5B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAE4B,OAAO,CAACC,QAA9C;AAAwD,MAAA,IAAI,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC,CAAC,KAAKhB,KAAL,CAAWE,IAAb,GAAoB,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBe,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,GAAuE,YAF/E,CADJ,CADJ;AASH;;AA3CwC;;AA8C7C,eAAenC,UAAU,CAACG,MAAD,CAAV,CAAmBW,cAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport CardMovie from './CardMovie';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n      },\r\n});\r\n\r\nclass CardsListMovie extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacing: '5',\r\n            data: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        return fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&language=en-US&page=1', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    //'Content-Type': 'application/json'\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\" // otherwise $_POST is empty\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log(json);            \r\n                this.setState({\r\n                    data: json\r\n                })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        console.log(this.props);\r\n        \r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={360} className={classes.gridList} cols={3}>\r\n                    {\r\n                        !!this.state.data ? <CardMovie movieInfo={this.state.data.results}/> : 'Loading...'\r\n                    }\r\n                </GridList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CardsListMovie);"]},"metadata":{},"sourceType":"module"}