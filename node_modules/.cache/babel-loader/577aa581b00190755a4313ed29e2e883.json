{"ast":null,"code":"var _jsxFileName = \"C:\\\\works\\\\reactjs-test-app\\\\src\\\\CardMovie.js\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  itemWrapp: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  itemImg: {\n    width: 292,\n    height: 388,\n    textAlign: 'center',\n    boxShadow: '0px 0px 18px -6px rgba(0,0,0,0.75)',\n    transition: 'all ease .3s',\n    backgroundPositionX: 'center',\n    backgroundPositionY: 'center',\n    backgroundSize: '100%',\n    backgroundRepeat: 'no-repeat',\n    cursor: 'pointer',\n    '&:hover': {\n      transition: 'all ease .3s',\n      backgroundSize: '150%',\n      boxShadow: '0px 0px 18px -6px rgba(0,0,0,1)'\n    }\n  },\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n});\n\nclass CardMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePopoverOpen = event => {\n      console.log('TIIIIIIIIITLE', event);\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handlePopoverClose = () => {\n      this.setState({\n        anchorEl: null,\n        movieTitle: null\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      movieTitle: null\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    console.log(this.state);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.movieInfo.map(movie => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        lg: 3,\n        sm: 6,\n        md: 4,\n        xl: 3,\n        className: classes.itemWrapp,\n        key: movie.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n        \"aria-haspopup\": \"true\",\n        onMouseEnter: this.handlePopoverOpen.bind(this),\n        onMouseLeave: this.handlePopoverClose.bind(this),\n        className: classes.itemImg,\n        style: {\n          backgroundImage: \"url(\" + \"https://image.tmdb.org/t/p/w500/\".concat(movie.poster_path) + \")\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }), React.createElement(Popover, {\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onClose: this.handlePopoverClose,\n      disableRestoreFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCardMovie.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CardMovie);","map":{"version":3,"sources":["C:\\works\\reactjs-test-app\\src\\CardMovie.js"],"names":["React","Fragment","withStyles","Grid","PropTypes","Popover","Typography","styles","theme","root","display","flexWrap","justifyContent","overflow","itemWrapp","padding","spacing","itemImg","width","height","textAlign","boxShadow","transition","backgroundPositionX","backgroundPositionY","backgroundSize","backgroundRepeat","cursor","popover","pointerEvents","paper","CardMovie","Component","constructor","props","handlePopoverOpen","event","console","log","setState","anchorEl","currentTarget","handlePopoverClose","movieTitle","state","render","classes","open","Boolean","movieInfo","map","movie","img","undefined","bind","backgroundImage","poster_path","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n    },\r\n    itemWrapp: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    itemImg: {\r\n        width: 292,\r\n        height: 388,\r\n        textAlign: 'center',\r\n        boxShadow: '0px 0px 18px -6px rgba(0,0,0,0.75)',\r\n        transition: 'all ease .3s',\r\n        backgroundPositionX: 'center',\r\n        backgroundPositionY: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            transition: 'all ease .3s',\r\n            backgroundSize: '150%',\r\n            boxShadow: '0px 0px 18px -6px rgba(0,0,0,1)',\r\n        }\r\n    },\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n    },\r\n});\r\n\r\nclass CardMovie extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            anchorEl: null,\r\n            movieTitle: null,\r\n        };\r\n    }\r\n    \r\n    \r\n    handlePopoverOpen = (event) => {\r\n        console.log('TIIIIIIIIITLE', event);\r\n        \r\n        this.setState({ \r\n            anchorEl: event.currentTarget,\r\n        });\r\n    };\r\n    \r\n    handlePopoverClose = () => {\r\n        this.setState({ \r\n            anchorEl: null,\r\n            movieTitle:  null \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl } = this.state;\r\n        const open = Boolean(anchorEl);\r\n        console.log(this.state);\r\n        \r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.props.movieInfo.map(movie => {\r\n                        return ( \r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                lg={3} \r\n                                sm={6} \r\n                                md={4} \r\n                                xl={3} \r\n                                className={classes.itemWrapp} \r\n                                key={movie.img}\r\n                                \r\n                            >\r\n                                <div \r\n                                    aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onMouseEnter={this.handlePopoverOpen.bind(this)}\r\n                                    onMouseLeave={this.handlePopoverClose.bind(this)} \r\n                                    className={classes.itemImg} \r\n                                    style={{backgroundImage: \"url(\" + `https://image.tmdb.org/t/p/w500/${movie.poster_path}` + \")\"}}\r\n                                ></div> \r\n                                    \r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n                <Popover\r\n                    id=\"mouse-over-popover\"\r\n                    className={classes.popover}\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    onClose={this.handlePopoverClose}\r\n                    disableRestoreFocus\r\n                    >\r\n                        <Typography></Typography>\r\n                </Popover>    \r\n            </Fragment>\r\n        )\r\n    }    \r\n}\r\n\r\nCardMovie.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardMovie);"]},"metadata":{},"sourceType":"module"}